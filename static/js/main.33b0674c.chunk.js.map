{"version":3,"sources":["giraffes/ReticulatedGiraffe.js","giraffes/WestAfricanGiraffe.js","giraffes/NubianGiraffe.js","giraffes/KordofanGiraffe.js","components/Giraffe.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["ReticulatedGiraffe","svg","d3","xpart","circles","i","j","push","x","Math","random","y","width","voronoi","from","d","append","attr","selectAll","data","join","_d","renderCell","node","WestAfricanGiraffe","height","defs","length","offset","color","enter","style","NubianGiraffe","KordofanGiraffe","path","document","createElementNS","setAttribute","len","getTotalLength","points","pt","getPointAtLength","dupa","Giraffe","props","species","dangerouslySetInnerHTML","__html","innerHTML","className","viewBox","strokeWidth","App","useState","count","setCount","prevCount","useForceUpdate","forceUpdate","forceUpdateValue","setSpecies","onClickHandler","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.33b0674c.chunk.js","sourcesContent":["import * as d3 from \"d3\";\n\nconst ReticulatedGiraffe = () => {\n\tconst height = 800;\n\tconst width = 800;\n\n\tconst svg = d3.create(\"svg\");\n\n\tconst xpart = height / 3;\n\tconst ypart = width / 4;\n\tlet circles = [];\n\tfor (let i = 0; i < 3; i++) {\n\t\tfor (let j = 0; j < 4; j++) {\n\t\t\tcircles.push({\n\t\t\t\tx:\n\t\t\t\t\tMath.random() *\n\t\t\t\t\t\t((i + 1) * xpart * 0.95 - i * xpart * 1.05) +\n\t\t\t\t\ti * xpart * 1.1,\n\t\t\t\ty:\n\t\t\t\t\tMath.random() *\n\t\t\t\t\t\t((j + 1) * ypart * 0.95 - j * ypart * 1.05) +\n\t\t\t\t\tj * ypart * 1.1,\n\t\t\t});\n\t\t}\n\t}\n\n\tlet voronoi = d3.Delaunay.from(\n\t\tcircles,\n\t\t(d) => d.x,\n\t\t(d) => d.y\n\t).voronoi([0, 0, width, height]);\n\n\t//cells\n\tsvg.append(\"g\")\n\t\t.attr(\"fill\", \"#6b371f\")\n\t\t.attr(\"pointer-events\", \"all\")\n\t\t.selectAll(\"path\")\n\t\t.data(circles)\n\t\t.join(\"path\")\n\t\t.attr(\"d\", (_d, i) => voronoi.renderCell(i));\n\n\t//mesh\n\tsvg.append(\"g\")\n\t\t.attr(\"fill\", \"none\")\n\t\t.attr(\"stroke\", \"#ccc\")\n\t\t.attr(\"stroke-width\", 25)\n\t\t.selectAll(\"path\")\n\t\t.data(circles)\n\t\t.join(\"path\")\n\t\t.attr(\"d\", (_d, i) => voronoi.renderCell(i));\n\n\treturn svg.node();\n};\n\nexport default ReticulatedGiraffe;\n","import * as d3 from \"d3\";\n\nconst WestAfricanGiraffe = () => {\n\tconst height = 800;\n\tconst width = 800;\n\n\tconst svg = d3.create(\"svg\");\n\n\tconst xpart = height / 4;\n\tconst ypart = width / 4;\n\tlet circles = [];\n\tfor (let i = 0; i < 4; i++) {\n\t\tfor (let j = 0; j < 4; j++) {\n\t\t\tcircles.push({\n\t\t\t\tx:\n\t\t\t\t\tMath.random() * ((i + 1) * xpart * 0.9 - i * xpart * 1.1) +\n\t\t\t\t\ti * xpart * 1.1,\n\t\t\t\ty:\n\t\t\t\t\tMath.random() * ((j + 1) * ypart * 0.9 - j * ypart * 1.1) +\n\t\t\t\t\tj * ypart * 1.1,\n\t\t\t});\n\t\t}\n\t}\n\n\tlet voronoi = d3.Delaunay.from(\n\t\tcircles,\n\t\t(d) => d.x,\n\t\t(d) => d.y\n\t).voronoi([0, 0, width, height]);\n\n\t//cells\n\tsvg.append(\"g\")\n\t\t.attr(\"fill\", \"#b48b57\")\n\t\t.attr(\"pointer-events\", \"all\")\n\t\t.selectAll(\"path\")\n\t\t.data(circles)\n\t\t.join(\"path\")\n\t\t.attr(\"d\", (_d, i) => voronoi.renderCell(i));\n\n\t//gradient\n\tvar defs = svg.append(\"defs\");\n\tfor (let i = 0; i < circles.length; i++) {\n\t\tdefs.append(\"radialGradient\")\n\t\t\t.attr(\"id\", i)\n\t\t\t.selectAll(\"stop\")\n\t\t\t.data([\n\t\t\t\t{ offset: \"0%\", color: \"#c09e72\" },\n\t\t\t\t{ offset: \"100%\", color: \"#b48b57\" },\n\t\t\t])\n\t\t\t.enter()\n\t\t\t.append(\"stop\")\n\t\t\t.attr(\"offset\", function (d) {\n\t\t\t\treturn d.offset;\n\t\t\t})\n\t\t\t.attr(\"stop-color\", function (d) {\n\t\t\t\treturn d.color;\n\t\t\t});\n\n\t\tdefs.append(\"clipPath\")\n\t\t\t.attr(\"id\", `clipPath${i}`)\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"d\", voronoi.renderCell(i));\n\n\t\tsvg.append(\"circle\")\n\t\t\t.attr(\"r\", 120)\n\t\t\t.attr(\"cx\", circles[i].x)\n\t\t\t.attr(\"cy\", circles[i].y)\n\t\t\t.attr(\"clip-path\", `url(#clipPath${i})`)\n\t\t\t.style(\"fill\", `url('#${i}')`);\n\t}\n\n\t//mesh\n\tsvg.append(\"g\")\n\t\t.attr(\"fill\", \"none\")\n\t\t.attr(\"stroke\", \"#f5e6cf\")\n\t\t.attr(\"stroke-width\", 25)\n\t\t.selectAll(\"path\")\n\t\t.data(circles)\n\t\t.join(\"path\")\n\t\t.attr(\"d\", (_d, i) => voronoi.renderCell(i));\n\n\treturn svg.node();\n};\n\nexport default WestAfricanGiraffe;\n","import * as d3 from \"d3\";\n\nconst NubianGiraffe = () => {\n\tconst height = 800;\n\tconst width = 800;\n\n\tconst svg = d3.create(\"svg\");\n\n\tconst xpart = height / 5;\n\tconst ypart = width / 4;\n\tlet circles = [];\n\tfor (let i = 0; i < 5; i++) {\n\t\tfor (let j = 0; j < 4; j++) {\n\t\t\tcircles.push({\n\t\t\t\tx:\n\t\t\t\t\tMath.random() *\n\t\t\t\t\t\t((i + 1) * xpart * 0.95 - i * xpart * 1.05) +\n\t\t\t\t\ti * xpart * 1.1,\n\t\t\t\ty:\n\t\t\t\t\tMath.random() *\n\t\t\t\t\t\t((j + 1) * ypart * 0.95 - j * ypart * 1.05) +\n\t\t\t\t\tj * ypart * 1.1,\n\t\t\t});\n\t\t}\n\t}\n\n\tlet voronoi = d3.Delaunay.from(\n\t\tcircles,\n\t\t(d) => d.x,\n\t\t(d) => d.y\n\t).voronoi([0, 0, width, height]);\n\n\t//cells\n\tsvg.append(\"g\")\n\t\t.attr(\"fill\", \"#a97e49\")\n\t\t.attr(\"pointer-events\", \"all\")\n\t\t.selectAll(\"path\")\n\t\t.data(circles)\n\t\t.join(\"path\")\n\t\t.attr(\"d\", (_d, i) => voronoi.renderCell(i));\n\n\tvar defs = svg.append(\"defs\");\n\n\tfor (let i = 0; i < circles.length; i++) {\n\t\tdefs.append(\"radialGradient\")\n\t\t\t.attr(\"id\", i)\n\t\t\t.selectAll(\"stop\")\n\t\t\t.data([\n\t\t\t\t{ offset: \"0%\", color: \"#7d5d36\" },\n\t\t\t\t{ offset: \"50%\", color: \"#8f6a3d\" },\n\t\t\t\t{ offset: \"100%\", color: \"#a97e49\" },\n\t\t\t])\n\t\t\t.enter()\n\t\t\t.append(\"stop\")\n\t\t\t.attr(\"offset\", function (d) {\n\t\t\t\treturn d.offset;\n\t\t\t})\n\t\t\t.attr(\"stop-color\", function (d) {\n\t\t\t\treturn d.color;\n\t\t\t});\n\n\t\tdefs.append(\"clipPath\")\n\t\t\t.attr(\"id\", `clipPath${i}`)\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"d\", voronoi.renderCell(i));\n\n\t\tsvg.append(\"circle\")\n\t\t\t.attr(\"r\", 100)\n\t\t\t.attr(\"cx\", circles[i].x)\n\t\t\t.attr(\"cy\", circles[i].y)\n\t\t\t.attr(\"clip-path\", `url(#clipPath${i})`)\n\t\t\t.style(\"fill\", `url('#${i}')`);\n\t}\n\n\t//mesh\n\tsvg.append(\"g\")\n\t\t.attr(\"fill\", \"none\")\n\t\t.attr(\"stroke\", \"#e4d5ab\")\n\t\t.selectAll(\"path\")\n\t\t.data(circles)\n\t\t.join(\"path\")\n\t\t.attr(\"d\", (_d, i) => voronoi.renderCell(i))\n\t\t.attr(\"stroke-width\", () => Math.random() * (20 - 12) + 12);\n\n\treturn svg.node();\n};\n\nexport default NubianGiraffe;\n","import * as d3 from \"d3\";\n\nconst KordofanGiraffe = () => {\n\tconst height = 800;\n\tconst width = 800;\n\n\tconst svg = d3.create(\"svg\");\n\n\tconst xpart = height / 5;\n\tconst ypart = width / 5;\n\tlet circles = [];\n\tfor (let i = 0; i < 5; i++) {\n\t\tfor (let j = 0; j < 5; j++) {\n\t\t\tcircles.push({\n\t\t\t\tx:\n\t\t\t\t\tMath.random() *\n\t\t\t\t\t\t((i + 1) * xpart * 0.95 - i * xpart * 1.05) +\n\t\t\t\t\ti * xpart * 1.1,\n\t\t\t\ty:\n\t\t\t\t\tMath.random() *\n\t\t\t\t\t\t((j + 1) * ypart * 0.95 - j * ypart * 1.05) +\n\t\t\t\t\tj * ypart * 1.1,\n\t\t\t});\n\t\t}\n\t}\n\n\tlet voronoi = d3.Delaunay.from(\n\t\tcircles,\n\t\t(d) => d.x,\n\t\t(d) => d.y\n\t).voronoi([0, 0, width, height]);\n\n\t//cells TODO to jest zbędne wystarczy tło na całe svg\n\tsvg.append(\"g\")\n\t\t.attr(\"fill\", \"#a6865e\")\n\t\t.attr(\"pointer-events\", \"all\")\n\t\t.selectAll(\"path\")\n\t\t.data(circles)\n\t\t.join(\"path\")\n\t\t.attr(\"d\", (_d, i) => voronoi.renderCell(i));\n\n\tvar defs = svg.append(\"defs\");\n\n\tfor (let i = 0; i < circles.length; i++) {\n\t\tdefs.append(\"radialGradient\")\n\t\t\t.attr(\"id\", i)\n\t\t\t.selectAll(\"stop\")\n\t\t\t.data([\n\t\t\t\t{ offset: \"0%\", color: \"#846948\" },\n\t\t\t\t{ offset: \"100%\", color: \"#a6865e\" },\n\t\t\t])\n\t\t\t.enter()\n\t\t\t.append(\"stop\")\n\t\t\t.attr(\"offset\", function (d) {\n\t\t\t\treturn d.offset;\n\t\t\t})\n\t\t\t.attr(\"stop-color\", function (d) {\n\t\t\t\treturn d.color;\n\t\t\t});\n\n\t\tdefs.append(\"clipPath\")\n\t\t\t.attr(\"id\", `clipPath${i}`)\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"d\", voronoi.renderCell(i));\n\n\t\tsvg.append(\"circle\")\n\t\t\t.attr(\"r\", 100)\n\t\t\t.attr(\"cx\", circles[i].x)\n\t\t\t.attr(\"cy\", circles[i].y)\n\t\t\t.attr(\"clip-path\", `url(#clipPath${i})`)\n\t\t\t.style(\"fill\", `url('#${i}')`);\n\t}\n\n\tfunction dupa(i) {\n\t\tconst NUM_POINTS = 80;\n\t\tconst path = document.createElementNS(\n\t\t\t\"http://www.w3.org/2000/svg\",\n\t\t\t\"path\"\n\t\t);\n\t\tconst d = voronoi.renderCell(i);\n\t\tpath.setAttribute(\"d\", d);\n\t\tconst len = path.getTotalLength();\n\t\tlet points = [];\n\n\t\tfor (let i = 0; i < NUM_POINTS; i++) {\n\t\t\tlet pt = path.getPointAtLength((i * len) / (NUM_POINTS - 1));\n\n\t\t\tif (i >= 5 && i <= 75) {\n\t\t\t\tpt.x += Math.random() * (3 + 3) - 3;\n\t\t\t\tpt.y += Math.random() * (3 + 3) - 3;\n\t\t\t}\n\n\t\t\tpoints.push([pt.x, pt.y]);\n\t\t}\n\t\treturn points;\n\t}\n\n\t//mesh\n\tsvg.append(\"g\")\n\t\t.attr(\"fill\", \"none\")\n\t\t.attr(\"stroke\", \"#e4d5ab\")\n\t\t.selectAll(\"path\")\n\t\t.data(circles)\n\t\t.join(\"polygon\")\n\t\t.attr(\"points\", (_d, i) => dupa(i))\n\t\t.attr(\"stroke-width\", () => Math.random() * (30 - 20) + 20);\n\n\treturn svg.node();\n};\n\nexport default KordofanGiraffe;\n","import ReticulatedGiraffe from \"../giraffes/ReticulatedGiraffe\"\nimport WestAfricanGiraffe from \"../giraffes/WestAfricanGiraffe\"\nimport NubianGiraffe from \"../giraffes/NubianGiraffe\"\nimport KordofanGiraffe from \"../giraffes/KordofanGiraffe\"\n\nfunction Giraffe (props) {\n    var svg\n    switch(props.species){\n        case 0:\n            svg = ReticulatedGiraffe()\n            break;\n        case 1:\n            svg = WestAfricanGiraffe()\n            break;\n        case 2:\n            svg = NubianGiraffe()\n            break;\n        case 3:\n            svg = KordofanGiraffe()\n            break;\n        default:\n            svg = ReticulatedGiraffe()\n    }\n    return (\n        <svg dangerouslySetInnerHTML={{__html: svg.innerHTML}} className=\"ddd\" viewBox=\"100, 100, 600, 600\" strokeWidth=\"1\"/>\n    )\n}\n\nexport default Giraffe","import Giraffe from \"./components/Giraffe\";\nimport React, {useState} from \"react\";\nimport \"./styles/App.css\";\n\nconst useForceUpdate = () => {\n\tconst [count, setCount] = useState(0)\n\t\n\tconst increment = () => setCount(prevCount => prevCount + 1)\n\treturn [increment, count]\n}\n\nfunction App() {\n\tconst [forceUpdate, forceUpdateValue] = useForceUpdate()\n\tlet [species, setSpecies] = useState(0)\n\n\tconst onClickHandler = props => {\n\t\tsetSpecies(species = props)\n\t\tforceUpdate()\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">ŻYRAFO-INATOR</header>\n\t\t\t<main className=\"Container\">\n\t\t\t\t<Giraffe key={forceUpdateValue} species={species} />\n\t\t\t\t<div className=\"ButtonList\">\n\t\t\t\t\t<button type=\"button\" className=\"Button\" onClick={() => onClickHandler(0)}>Żyrafa siatkowana</button>\n\t\t\t\t\t<button type=\"button\" className=\"Button\" onClick={() => onClickHandler(1)}>Żyrafa zachodnioafrykańska</button>\n\t\t\t\t\t<button type=\"button\" className=\"Button\" onClick={() => onClickHandler(2)}>Żyrafa nubijska</button>\n\t\t\t\t\t<button type=\"button\" className=\"Button\" onClick={() => onClickHandler(3)}>Żyrafa kordofańska</button>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}